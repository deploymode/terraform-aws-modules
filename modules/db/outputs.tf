output "instance_id" {
  value       = module.rds_instance.instance_id
  description = "ID of the instance"
}

output "instance_arn" {
  value       = module.rds_instance.instance_arn
  description = "ARN of the instance"
}

output "instance_address" {
  value       = module.rds_instance.instance_address
  description = "Address of the instance"
}

output "instance_endpoint" {
  value       = module.rds_instance.instance_endpoint
  description = "DNS Endpoint of the instance"
}

output "resource_id" {
  value       = module.rds_instance.resource_id
  description = "The RDS Resource ID of this instance."
}

output "parameter_group_id" {
  value       = module.rds_instance.parameter_group_id
  description = "ID of the Parameter Group"
}

output "option_group_id" {
  value       = module.rds_instance.option_group_id
  description = "ID of the Option Group"
}

output "replica_instance_id" {
  value       = var.create_replica ? module.rds_replica.instance_id : null
  description = "ID of the replica instance"
}

output "replica_instance_arn" {
  value       = var.create_replica ? module.rds_replica.instance_arn : null
  description = "ARN of the replica instance"
}
output "replica_instance_address" {
  value       = var.create_replica ? module.rds_replica.instance_address : null
  description = "Address of the replica instance"
}

output "replica_instance_endpoint" {
  value       = var.create_replica ? module.rds_replica.instance_endpoint : null
  description = "DNS Endpoint of the replica instance"
}

output "replica_resource_id" {
  value       = var.create_replica ? module.rds_replica.resource_id : null
  description = "The RDS Resource ID of this replica instance."
}

output "replica_parameter_group_id" {
  value       = var.create_replica ? module.rds_replica.parameter_group_id : null
  description = "ID of the Parameter Group for the replica"
}

output "replica_option_group_id" {
  value       = var.create_replica ? module.rds_replica.option_group_id : null
  description = "ID of the Option Group for the replica"
}

output "subnet_group_id" {
  value       = module.rds_instance.subnet_group_id
  description = "ID of the created Subnet Group"
}

output "security_group_id" {
  value       = module.rds_instance.security_group_id
  description = "ID of the database's security group"
}

output "db_access_security_group_id" {
  value       = join("", aws_security_group.allowed.*.id)
  description = "ID of the security group for use by services which need access to the DB"
}
output "hostname" {
  value       = length(var.dns_zone_id) > 0 ? module.rds_instance.hostname : module.rds_instance.instance_address
  description = "DNS host name of the instance"
}

output "database_user" {
  value       = local.database_username
  description = "Database username - either supplied or generated by module"
}
output "database_user_ssm_param_arn" {
  value       = lookup(module.store_write.arn_map, var.db_username_ssm_param_path, "")
  description = "Database username SSM param store item ARN"
}
output "database_password" {
  value       = var.database_password == "" ? join("", random_password.password.*.result) : var.database_password
  description = "Database password if generated by module"
  sensitive   = true
}
output "database_password_ssm_param_arn" {
  value       = lookup(module.store_write.arn_map, var.db_password_ssm_param_path, "")
  description = "Database user password SSM param store item ARN"
}
output "database_name" {
  # Can't use coalesce here because both values can be empty, but we want to output "" instead of null
  value       = var.database_name == null ? "" : var.database_name
  description = "Name of database created with instance"
}
